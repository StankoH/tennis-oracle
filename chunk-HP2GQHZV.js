import{a as r}from"./chunk-DJ4ZLQE5.js";import{a as l}from"./chunk-M6G75PQQ.js";import{Y as n,ba as a,i}from"./chunk-GPF5BPB6.js";var p=class o{constructor(t){this.http=t}loggedIn=new i(this.hasToken());apiUrl=`${r.apiUrl}/auth`;authStatus$=this.loggedIn.asObservable();hasToken(){return!!localStorage.getItem("token")}isLoggedIn(){return this.loggedIn.value}setAuthState(t){console.log("\u2705 setAuthState pozvan s:",t),this.loggedIn.next(t)}login(t){let e={identifier:t.identifier,password:t.password};return this.http.post(`${r.apiUrl}/auth/login`,e)}loginWithGoogle(){window.location.href=`${r.apiUrl}/auth/google`}loginWithFacebook(){window.location.href=`${r.apiUrl}/auth/facebook`}resendVerification(t){return this.http.post(`${r.apiUrl}/auth/resend-verification`,{email:t})}contactUs(t){return this.http.post(`${r.apiUrl}/auth/contact`,t)}currentUser=new i(this.getUserFromStorage());user$=this.currentUser.asObservable();getUserFromStorage(){let t=localStorage.getItem("user");return t?JSON.parse(t):null}setUser(t){localStorage.setItem("user",JSON.stringify(t)),this.currentUser.next(t)}getUser(){let t=localStorage.getItem("user");return t?JSON.parse(t):null}logout(){localStorage.removeItem("token"),localStorage.removeItem("user"),this.loggedIn.next(!1),this.currentUser.next(null)}updateUser(t){let s={Authorization:`Bearer ${localStorage.getItem("token")}`};return this.http.post(`${this.apiUrl}/update`,t,{headers:s})}initAuth(){let t=localStorage.getItem("token"),e=localStorage.getItem("user");t&&!e&&(localStorage.removeItem("token"),this.loggedIn.next(!1));let s=!!t;this.loggedIn.next(s),this.currentUser.next(e?JSON.parse(e):null),console.log("\u{1F504} initAuth:",s)}resendVerificationEmail(t){return this.http.post(`${this.apiUrl}/resend-verification`,{email:t})}verifyEmail(t){return this.http.post(`${this.apiUrl}/verify-email`,{token:t})}sendResetPasswordEmail(t){return this.http.post(`${this.apiUrl}/request-reset-password`,{email:t})}resetPassword(t,e,s){return this.http.post(`${this.apiUrl}/reset-password`,{token:t,email:e,password:s})}checkNicknameExists(t){return this.http.get(`${this.apiUrl}/nickname-exists/${t}`)}static \u0275fac=function(e){return new(e||o)(a(l))};static \u0275prov=n({token:o,factory:o.\u0275fac,providedIn:"root"})};export{p as a};
